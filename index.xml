<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>韦昊斯的博客</title>
    <link>http://www.weihaosi.me/</link>
    <description>Recent content on 韦昊斯的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 01 Apr 2019 10:42:16 +0800</lastBuildDate>
    
	<atom:link href="http://www.weihaosi.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Postgresql 10 主从配置</title>
      <link>http://www.weihaosi.me/post/postgresql-10-%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 01 Apr 2019 10:42:16 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/postgresql-10-%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/</guid>
      <description>实验环境 主从方案: 主数据库： db1 从数据库： db2 主从方式: 流复制 数据库版本: 10.3 操作系统: Centos 7.3 数据库安装 具体手动安装的详细方法，自行百度，这里提供一</description>
    </item>
    
    <item>
      <title>Appium 的 Android 平台源码分析[转载]</title>
      <link>http://www.weihaosi.me/post/appium-%E7%9A%84-android-%E5%B9%B3%E5%8F%B0%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E8%BD%AC%E8%BD%BD/</link>
      <pubDate>Wed, 16 Jan 2019 15:56:06 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/appium-%E7%9A%84-android-%E5%B9%B3%E5%8F%B0%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E8%BD%AC%E8%BD%BD/</guid>
      <description>[转载声明]内容整理来自csdn 的Q博士 appium框架之bootstrap bootstrap之Click事件 bootstrap之WaitF</description>
    </item>
    
    <item>
      <title>Python Nose测试框架命令行详解</title>
      <link>http://www.weihaosi.me/post/python-nose%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 16 Jan 2019 15:41:59 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/python-nose%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;p&gt;&lt;strong&gt;-V, &amp;ndash;version&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Output nose version and exit  打印nose的版本号&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-p, &amp;ndash;plugins&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Output list of available plugins and exit. Combine with higher verbosity for greater detail&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-v=DEFAULT, &amp;ndash;verbose=DEFAULT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Be more verbose. [NOSE_VERBOSE]  nose日志输出等级&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;ndash;verbosity=VERBOSITY&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Set verbosity; –verbosity=2 is the same as -v 和上面-v是一样&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-q=DEFAULT, &amp;ndash;quiet=DEFAULT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Be less verbose 精简的日志输出&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>阿里云NTP时间同步服务器</title>
      <link>http://www.weihaosi.me/post/%E9%98%BF%E9%87%8C%E4%BA%91ntp%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Wed, 16 Jan 2019 15:35:25 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/%E9%98%BF%E9%87%8C%E4%BA%91ntp%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>1 2 3 4 5 6 7 ntp1.aliyun.com ntp2.aliyun.com ntp3.aliyun.com ntp4.aliyun.com ntp5.aliyun.com ntp6.aliyun.com ntp7.aliyun.com</description>
    </item>
    
    <item>
      <title>华为手机优化办法</title>
      <link>http://www.weihaosi.me/post/%E5%8D%8E%E4%B8%BA%E6%89%8B%E6%9C%BA%E4%BC%98%E5%8C%96%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 16 Jan 2019 15:31:43 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/%E5%8D%8E%E4%B8%BA%E6%89%8B%E6%9C%BA%E4%BC%98%E5%8C%96%E5%8A%9E%E6%B3%95/</guid>
      <description>查看所有的已经安装的包名： adb shell pm list packages 无ROOT停用内置应用： adb shell pm disable-user &amp;lt;name of package&amp;gt; 无root卸载内置应用： pm uninstall -k --user 0 &amp;lt;name of package&amp;gt; 9.0 系统启用第三方桌面： 第一</description>
    </item>
    
    <item>
      <title>新的启程！</title>
      <link>http://www.weihaosi.me/life/2019-01-15-newlife/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.weihaosi.me/life/2019-01-15-newlife/</guid>
      <description>&lt;p&gt;2018 已经过去了半个月，感觉岁月的时差还是没让我一下子适应过来。修修补补的填坑已经成为2018年的常态。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;事情在总是感觉都有了计划，计划总是执行到一半就被否决。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;愿望总是美好，最后的结果总是差强人意。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;总感觉做了好多事情，关键的时候总没有可以拿出手的成果。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2018年的工作对于我来说是不尽人意的。2017年计划的工作，就像上面说的一样，做了，总是磕磕绊绊，到年底拿出来见人，总觉得鸡肋，真是食之无味弃之可惜！&lt;/p&gt;

&lt;p&gt;这些天，城里因为准备过年，空气中似乎开始弥漫一种忙碌而温暖的味道，少了往日的芜杂喧闹之后，难得的有了一份空寂的心态。然后慢慢的去反思这一年过来的点点滴滴。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>11.3.6 Spring MVC Test Framework</title>
      <link>http://www.weihaosi.me/post/2017-03-26-11-3-6-spring-mvc-test-framework/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2017-03-26-11-3-6-spring-mvc-test-framework/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;独立的项目
在包括 Spring Framework 3.2之前，Spring MVC Test framework都是作为一个独立的项目挂在GitHub上面，通过不同人的实际使用、反馈和非常多的贡献来不断的成长。
这个独立的项目目前依然还是可以在Gihub上面找到，并且能在包括 Spring Framework 3.1.x之前的版本中去使用。使用3.2版本以上的应用必须替换依赖&lt;code&gt;spring-test-mvc&lt;/code&gt;为&lt;code&gt;spring-test&lt;/code&gt;
&lt;code&gt;spring-test&lt;/code&gt;使用了不一样的包&lt;code&gt;org.springframework.test.web&lt;/code&gt;，但是除了两点不同外，其他都是一样的。一点是在3.2版本新增的特性(比如web的异步请求)。另外一点是创建&lt;code&gt;MockMvc&lt;/code&gt;实例的一些选项。在3.2以上的版本中，可以只需要通过&lt;code&gt;TestContext&lt;/code&gt;框架来做这样的工作，这能够更好的加载配置文件。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>12. Spring MVC Test Integration</title>
      <link>http://www.weihaosi.me/post/2017-03-26-12-spring-mvc-test-integration/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2017-03-26-12-spring-mvc-test-integration/</guid>
      <description>&lt;h1 id=&#34;spring-mvc-test-集成&#34;&gt;Spring MVC Test 集成&lt;/h1&gt;

&lt;h2 id=&#34;设置mockmvc和spring安全认证机制&#34;&gt;设置MockMvc和Spring安全认证机制&lt;/h2&gt;

&lt;p&gt;为了要在Spring MVC Test 中使用spring 的安全认证，必须添加spring 安全认证&lt;code&gt;FilterChainProxy&lt;/code&gt;作为一个&lt;code&gt;Filter&lt;/code&gt;。同时也必须要添加Spring 安全认证的&lt;code&gt;TestSecurityContextHolderPostProcessor&lt;/code&gt;，以便支持使用注解方式来执行Spring MVC Test。这可以通过使用spring安全认证的&lt;code&gt;SecurityMockMvcConfigurers.springSecurity()&lt;/code&gt;来实现。例子如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CentOS 挂载ISO镜像文件为本地源</title>
      <link>http://www.weihaosi.me/post/centos-%E6%9C%AC%E5%9C%B0iso-%E6%8C%82%E8%BD%BD%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E8%BD%AF%E4%BB%B6%E6%BA%90/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/centos-%E6%9C%AC%E5%9C%B0iso-%E6%8C%82%E8%BD%BD%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E8%BD%AF%E4%BB%B6%E6%BA%90/</guid>
      <description>CentOS 挂载ISO镜像文件为本地源 操作系统:CentOS5.5 ISO文件:CentOS5.5的ISO镜像一个 操作步骤： 一、挂载iso文件到挂载点 [root@server</description>
    </item>
    
    <item>
      <title>Centos 7 安装Oracle 11G R2</title>
      <link>http://www.weihaosi.me/post/centos-7%E5%AE%89%E8%A3%85oracle-11g-r2/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/centos-7%E5%AE%89%E8%A3%85oracle-11g-r2/</guid>
      <description>1.Oracle 软硬件配置要求 1.1. 内存： 最小1G，推荐2G或者更高 查看命令：grep MemTotal /proc/meminfo 1.2. swap RAW Swap 1G至2G 1.5倍 2G至16G 同RAW相等 16G以上 16G 查看命</description>
    </item>
    
    <item>
      <title>Centos Firewall 说明</title>
      <link>http://www.weihaosi.me/post/centos-firewall-%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/centos-firewall-%E8%AF%B4%E6%98%8E/</guid>
      <description>安装 # yum install firewalld 如果需要图形界面的话，则再安装 # yum install firewall-config #一、介绍 防火墙守护 firewalld 服务引入了一个信任级别的概念来管理与之相关联的连接与接口。它支持 ipv4 与</description>
    </item>
    
    <item>
      <title>Centos Hbase安装</title>
      <link>http://www.weihaosi.me/post/centos-hbase%E5%AE%89%E8%A3%85/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/centos-hbase%E5%AE%89%E8%A3%85/</guid>
      <description>JDK环境配置 具体这里不描述，步骤请百度 下载Hbase 下载地址：清华大学Hbase镜像 安装 直接解压文件就好tar -xzvf hbase-1.2.5-bin.tar.gz -C /data/。 单机版本</description>
    </item>
    
    <item>
      <title>Centos Systemctl服务配置例子</title>
      <link>http://www.weihaosi.me/post/centos-systemctl-%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/centos-systemctl-%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E4%BE%8B%E5%AD%90/</guid>
      <description>CentOS 7的服务systemctl脚本存放在：/usr/lib/systemd/，有系统（system）和用户（user）之分，需要开机不登陆就能</description>
    </item>
    
    <item>
      <title>Fastdfs 并发测试和相关配置说明</title>
      <link>http://www.weihaosi.me/post/fastdfs-%E5%B9%B6%E5%8F%91%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/fastdfs-%E5%B9%B6%E5%8F%91%E6%B5%8B%E8%AF%95/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;最近接触了一个新的平台，准备对平台的性能进行测试。开始收集性能需求和问题的时候，反馈最多的是平台的图片加载非常慢，甚至错乱。新平台的图片存储使用了Fastdfs服务进行管理，只有一个tracker和storage。那很明显，这个性能问题首先要从图片服务器Fastdfs开始测试。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Linux iptables 端口转发配置 -- 基于ubuntu</title>
      <link>http://www.weihaosi.me/post/2017-03-20-linux-iptables-%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E9%85%8D%E7%BD%AE-%E5%9F%BA%E4%BA%8Eubuntu/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2017-03-20-linux-iptables-%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E9%85%8D%E7%BD%AE-%E5%9F%BA%E4%BA%8Eubuntu/</guid>
      <description>&lt;h1 id=&#34;打开端口转发功能&#34;&gt;打开端口转发功能&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;临时设置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;sudo echo 1 &amp;gt;/proc/sys/net/ipv4/ip_forward&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;设置永久生效&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;vim 打开  &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;文件 ，在文件中添加&lt;code&gt;net.ipv4.ip_forward=1&lt;/code&gt;，通过命令&lt;code&gt;sudo sysctl -p&lt;/code&gt;使其生效&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>《Flask Framework Cookbook》 学习笔记 - Flask 应用的配置</title>
      <link>http://www.weihaosi.me/post/flaskcoolbook_1/</link>
      <pubDate>Mon, 20 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/flaskcoolbook_1/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;简单的Flask例子和安装就不讲了，大家去看官网的文档吧。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;1-基础的配置&#34;&gt;1. 基础的配置&lt;/h2&gt;

&lt;p&gt;想让我们的程序运行在调试模式下，可以这样配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;    &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DEBUG&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这个布尔值也可以通过Flask对象来设置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;    &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;debug&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;一般情况下，我们都使用最开始那种方式去配置这个选项。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[转]移动端之Chrome远程调试</title>
      <link>http://www.weihaosi.me/post/2017-03-10-%E8%BD%AC-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B9%8Bchrome%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/</link>
      <pubDate>Fri, 10 Mar 2017 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2017-03-10-%E8%BD%AC-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B9%8Bchrome%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;http://www.jianshu.com/p/ccd3a53ad075?utm_campaign=haruki&amp;amp;utm_content=note&amp;amp;utm_medium=reader_share&amp;amp;utm_source=qq&#34;&gt;移动端之Chrome远程调试&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;原理&#34;&gt;原理&lt;/h1&gt;

&lt;p&gt;安卓远程调试支持所有操作系统（Windows,Mac, Linux, and Chrome OS.）中调试，支持：&lt;/p&gt;

&lt;p&gt;调试站点的页面&lt;/p&gt;

&lt;p&gt;调试安卓原生App中的WebView&lt;/p&gt;

&lt;p&gt;实时将安卓设备的屏幕图像同步显示到开发机器&lt;/p&gt;

&lt;p&gt;通过端口转发（port forwarding）与虚拟主机映射（virtual host mapping）实现安卓移动设备与开发服务器进行交互调试&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gatling 一步一步进阶 3 - 脚本结构</title>
      <link>http://www.weihaosi.me/post/2016-12-09-gatling-%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E8%BF%9B%E9%98%B6-3/</link>
      <pubDate>Fri, 09 Dec 2016 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2016-12-09-gatling-%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E8%BF%9B%E9%98%B6-3/</guid>
      <description>&lt;h1 id=&#34;simulation-脚本结构&#34;&gt;Simulation 脚本结构&lt;/h1&gt;

&lt;p&gt;脚本是基于Scala类，包含四个部分：
* HTTP 协议配置
* 请求头定义
* 测试方案定义
* 测试策略定义&lt;/p&gt;

&lt;h2 id=&#34;http协议配置&#34;&gt;HTTP协议配置&lt;/h2&gt;

&lt;p&gt;最基本的配置是baseURL属性，这个地址将会作为每个测试方案测试时的http地址的前缀。除了这个，还可以配置通用的请求头属性，这里的这个请求头在每个请求都有效。
实例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;httpConf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;baseURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://computer-database.gatling.io&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;主路径&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;acceptHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;通用头&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;doNotTrackHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;不跟踪&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;acceptLanguageHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;en-US,en;q=0.5&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;头语言&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;acceptEncodingHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gzip, deflate&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;编码方式&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;userAgentHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:16.0) Gecko/20100101 Firefox/16.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;用户代理&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Jmeter命令行执行测试，自动备份log，输出jtl和html报告</title>
      <link>http://www.weihaosi.me/post/2017-03-08-jmeter%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDlog%E8%BE%93%E5%87%BAjtl%E5%92%8Chtml%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Fri, 09 Dec 2016 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2017-03-08-jmeter%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDlog%E8%BE%93%E5%87%BAjtl%E5%92%8Chtml%E6%8A%A5%E5%91%8A/</guid>
      <description>脚本大部分上是基于Jmeter自己的启动脚本进行修改 环境条件 配置JMETER_HOME 配置JAVA_HOME 配置ANT_HOME 脚本说明 启动</description>
    </item>
    
    <item>
      <title>Gatling 一步一步进阶 2 - 配置</title>
      <link>http://www.weihaosi.me/post/2016-12-08-gatling-%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E8%BF%9B%E9%98%B6-2/</link>
      <pubDate>Thu, 08 Dec 2016 16:18:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2016-12-08-gatling-%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E8%BF%9B%E9%98%B6-2/</guid>
      <description>&lt;h1 id=&#34;gatling-目录结构&#34;&gt;Gatling 目录结构&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;bin 保存Gatling执行脚本和录制工具的脚本&lt;/li&gt;
&lt;li&gt;conf 保存Gatling, Akka and Logback的配置文件.&lt;/li&gt;
&lt;li&gt;lib 保存Gatling的一些库文件&lt;/li&gt;
&lt;li&gt;user-files:

&lt;ul&gt;
&lt;li&gt;simulations 保存测试脚本，以包名为文件夹方式保存&lt;/li&gt;
&lt;li&gt;data 保存参数化需要用的测试数据.&lt;/li&gt;
&lt;li&gt;bodies 测试请求的body内容的模板.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;results 保存测试日志和测试报告.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Gatling 一步一步进阶 0 - 入门实例</title>
      <link>http://www.weihaosi.me/post/gatling-%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 08 Dec 2016 14:51:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/gatling-%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/</guid>
      <description>&lt;h1 id=&#34;下载与安装&#34;&gt;下载与安装&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;下载地址：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://gatling.io/#/resources/download&#34;&gt;http://gatling.io/#/resources/download&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;解压文件&lt;/li&gt;
&lt;li&gt;确保已经安装或者配置好JDK，最新版本的Gatling需要JDK8&lt;/li&gt;
&lt;li&gt;Gatling的启动脚本和maven插件需要配置JAVA_HOME环境变量。&lt;/li&gt;
&lt;li&gt;Gatling解压后就可以使用了，启动脚本在bin目录下，gatling.sh是启动测试，recorder.sh是启动录制&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Gatling默认字符编码是UTF-8，你如果要修改，则需要改动下面几项：
1、 录制的时候要选择编码方式
2、 在gatling.conf配置中修改编码方式
3、保证你修改的文件和脚本的编码方式是正确的&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Gatling 一步一步进阶 1 - 入门实例拓展</title>
      <link>http://www.weihaosi.me/post/2016-12-08-gatling-%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E8%BF%9B%E9%98%B6-1/</link>
      <pubDate>Thu, 08 Dec 2016 14:51:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2016-12-08-gatling-%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E8%BF%9B%E9%98%B6-1/</guid>
      <description>&lt;h1 id=&#34;独立过程处理&#34;&gt;独立过程处理&lt;/h1&gt;

&lt;p&gt;其实 &lt;a href=&#34;https://blog.idriverclub.com/2016/12/08/2016/12/gatling-%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/#more&#34;&gt;上节&lt;/a&gt;就已经使用了。
简单的方式就是如下（官方例子）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span class=&#34;k&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Search&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;search&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Home&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// let&amp;#39;s give proper names, as they are displayed in the reports
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pause&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Search&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/computers?f=macbook&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pause&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Select&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/computers/6&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pause&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Browse&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;browse&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;???&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;这里写动作&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Edit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edit&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;???&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;这里写动作&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//这里这样使用
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scn&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scenario&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Scenario Name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Search&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Browse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;browse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Edit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Spring 模块说明</title>
      <link>http://www.weihaosi.me/post/spring-%E6%A8%A1%E5%9D%97%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Thu, 08 Dec 2016 14:51:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/spring-%E6%A8%A1%E5%9D%97%E8%AF%B4%E6%98%8E/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Spring 是模块化的，这意味着可以只使用自己需要的模块&lt;/p&gt;

&lt;h1 id=&#34;模块框架&#34;&gt;模块框架&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://onj0ixn0u.bkt.clouddn.com/20170405201337655.png&#34; alt=&#34;20170405201337655&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;核心容器-core-container&#34;&gt;核心容器（Core container）&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Spring-Core: 核心工具类，Spring 其他模块大量使用Spring-Core&lt;/li&gt;
&lt;li&gt;Spring-Bean: Spring定义Bean的支持&lt;/li&gt;
&lt;li&gt;Spring-Context: 运行时Spring容器&lt;/li&gt;
&lt;li&gt;Spring-Context-Support： Spring容器对第三方包的集成支持&lt;/li&gt;
&lt;li&gt;Spring-Expression: 使用表达式语言在运行时查询和操作对象。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Tomcat 启动关闭重启脚本</title>
      <link>http://www.weihaosi.me/post/tomcat-%E5%90%AF%E5%8A%A8%E5%85%B3%E9%97%AD%E9%87%8D%E5%90%AF%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Thu, 08 Dec 2016 14:51:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/tomcat-%E5%90%AF%E5%8A%A8%E5%85%B3%E9%97%AD%E9%87%8D%E5%90%AF%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;这个脚本是从网上服务之过来使用的，具体是谁的我这里已经找不到了，如果作者看到可以给我信息，我会把原链接补充上。&lt;/p&gt;

&lt;p&gt;脚本做了一些改动，主要是获取PID的时候缺少了一些过滤&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>ubuntu引导修复和emergenc mode修复</title>
      <link>http://www.weihaosi.me/post/ubuntubootrecuse/</link>
      <pubDate>Thu, 08 Dec 2016 14:51:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/ubuntubootrecuse/</guid>
      <description>修复引导 系统直接进入grub rescuse模式 * 输入命令ls 显示所有的盘符，通过ls对应的盘符显示盘符的文件系统来确认目标分区， 1 ls (hd0,msdos5) 应该正</description>
    </item>
    
    <item>
      <title>单元测试和自动化脚本简要教程</title>
      <link>http://www.weihaosi.me/post/junit-4-%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 08 Dec 2016 14:51:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/junit-4-%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</guid>
      <description>Junit 4 简明教程 规范与要求 Junit 需要使用的版本都是4.x以上的版本，不可以使用3.x以下的版本 Junit 测试脚本在Maven项目中统一放在在src/main</description>
    </item>
    
    <item>
      <title>Python 装饰器深入学习 - 基础</title>
      <link>http://www.weihaosi.me/post/2016-12-05-python-%E8%A3%85%E9%A5%B0%E5%99%A8%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Mon, 05 Dec 2016 10:50:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2016-12-05-python-%E8%A3%85%E9%A5%B0%E5%99%A8%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;相关的官方wiki文档：&lt;a href=&#34;https://wiki.python.org/moin/PythonDecorators#About_this_page&#34;&gt;https://wiki.python.org/moin/PythonDecorators#About_this_page&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;概述&#34;&gt;概述&lt;/h1&gt;

&lt;p&gt;装饰器是软件设计模式的一种名词。装饰器可以动态改变函数，方法，类的功能，不需要写个子类或者修改原先函数中已经编写好的代码。
常见的装饰器设计模式可以查看维基&lt;a href=&#34;http://en.wikipedia.org/wiki/Decorator&#34;&gt;http://en.wikipedia.org/wiki/Decorator&lt;/a&gt;
在Python语言中有关的装饰器并不和上面说的这些完全一样。Python中的装饰器是具体的Python语法，以方便的改变函数或者方法。Python装饰器是从2.4版本开始支持，在&lt;a href=&#34;http://www.python.org/peps/pep-0318.html&#34;&gt;PEP 318&lt;/a&gt;中提出的。&lt;/p&gt;

&lt;h1 id=&#34;官方实例&#34;&gt;官方实例&lt;/h1&gt;

&lt;p&gt;地址在&lt;a href=&#34;https://wiki.python.org/moin/PythonDecoratorLibrary&#34;&gt;PythonDecoratorLibrary&lt;/a&gt;,另外可以查看&lt;a href=&#34;vhttps://wiki.python.org/moin/MixIns&#34;&gt;MixIns&lt;/a&gt;和&lt;a href=&#34;https://wiki.python.org/moin/MetaClasses&#34;&gt;MetaClasses&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;关于写法&#34;&gt;关于写法&lt;/h1&gt;

&lt;p&gt;关于Python装饰器的写法有很多种，具体的可以去查看一下官方wik的&lt;a href=&#34;https://wiki.python.org/moin/PythonDecorators#Current_Python_Decorator_Proposals&#34;&gt;Current Python Decorator Proposals&lt;/a&gt;]章节&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python with 上下文实例</title>
      <link>http://www.weihaosi.me/post/2016-12-03-python-with-%E4%B8%8A%E4%B8%8B%E6%96%87%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Sat, 03 Dec 2016 17:48:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2016-12-03-python-with-%E4%B8%8A%E4%B8%8B%E6%96%87%E5%AE%9E%E4%BE%8B/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本节涉及的内容包括装饰器，生成器，迭代器的相关内容，如果不很清楚请先查看这方面的内容&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;需求&#34;&gt;需求&lt;/h1&gt;

&lt;p&gt;本次实例的需求是要记录么次调用过程中的API，调用完成后清理程序的运行环境&lt;/p&gt;

&lt;h1 id=&#34;如何实现&#34;&gt;如何实现&lt;/h1&gt;

&lt;h2 id=&#34;首先实现建立两个测试类&#34;&gt;首先实现建立两个测试类&lt;/h2&gt;

&lt;p&gt;建立的类如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;One&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Log One class init for debug&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_private&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;one&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;other&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;two&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;other&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;thing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_private&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;two&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Two&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Log Two class init for debug&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;thing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;other&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;other&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;two&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Python进阶学习 - 低于类级 协同程序</title>
      <link>http://www.weihaosi.me/post/2016-12-02-python%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0-%E4%BD%8E%E4%BA%8E%E7%B1%BB%E7%BA%A7-2/</link>
      <pubDate>Fri, 02 Dec 2016 13:41:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2016-12-02-python%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0-%E4%BD%8E%E4%BA%8E%E7%B1%BB%E7%BA%A7-2/</guid>
      <description>&lt;h1 id=&#34;协同程序&#34;&gt;协同程序&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;协同程序是可以挂起，恢复，并且有多个进入点的函数。比如Io，lua，可以实现协同多个任务和管道机制。
在Python中，协同程序的替代者是线程
线程要关注资源锁，协同程序不需要。
生成器几乎就是协同程序，在&lt;a href=&#34;https://www.python.org/dev/peps/pep-0342&#34;&gt;PEP 342&lt;/a&gt;中实例化了生成器的新行为，提供了创建协同程序的调度程序的完整实例,Trampoline模式，通过队列把多个协同程序连接在一起&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;生成器本身是可以提供挂起，产生一个值的功能，但还算不是最好的协同程序。当别的函数在执行的时候生成器不能通过yield进行控制，除非这些函数本身也是生成器，并且外部生成器yield的值是通过内部生成器yield控制的。
然而，如果要通过传一个值或者异常到生成器中（当生成器被挂起），一个简单的调度程序或者递归程序将会异步的进行调用。例如异步socket I/O可以这样做&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 伪代码&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nonblocking_read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nbytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Python进阶学习 - 低于类级 列表推导、迭代器、生成器</title>
      <link>http://www.weihaosi.me/post/2016-12-01-python%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0-%E5%88%97%E8%A1%A8%E6%8E%A8%E5%AF%BC/</link>
      <pubDate>Thu, 01 Dec 2016 15:14:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/2016-12-01-python%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0-%E5%88%97%E8%A1%A8%E6%8E%A8%E5%AF%BC/</guid>
      <description>&lt;h1 id=&#34;列表推导&#34;&gt;列表推导&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;列表推导式（list comprehension）是利用其他列表创建新列表（类似于数学术语中的集合推导式）的一种方法。它的工作方式类似于for循环,但在简单场景下比for循环效率更高。
** 关键语：没当对序列进行循环处理时，应该考虑使用列表推导式 **&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下面做了个简单的测试：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 没有用推导式&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;even&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;even&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;没使用推导式耗时:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# print even&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 使用推导式&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;even&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;使用推导式耗时:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;结果如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;没使用推导式耗时:0.020000
使用推导式耗时:0.012000&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>《Flask Framework Cookbook》 学习笔记 - RESTful API</title>
      <link>http://www.weihaosi.me/post/flask-framework-cookbook-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-restful-api/</link>
      <pubDate>Tue, 29 Nov 2016 11:03:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/flask-framework-cookbook-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-restful-api/</guid>
      <description>REST 全名：REpresentational State Transfer，意思是指表征状态转移，Roy Fielding博士在2000年他的博士论文中提出来</description>
    </item>
    
    <item>
      <title>《Flask Framework Cookbook》 学习笔记 - Facebook、Google、Twitter等认证</title>
      <link>http://www.weihaosi.me/post/flask-framework-cookbook-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-flask-%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81-3/</link>
      <pubDate>Wed, 23 Nov 2016 15:02:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/flask-framework-cookbook-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-flask-%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81-3/</guid>
      <description>这些第三方的登录认证方式都是采用了Oauth2.0的授权机制，所以方法都是类似的。 在做这个之前，首先要到各个相关网站去注册相应的开发者账号，</description>
    </item>
    
    <item>
      <title>《Flask Framework Cookbook》 学习笔记 - Flask 用户认证 - OpenID认证</title>
      <link>http://www.weihaosi.me/post/flask-framework-cookbook-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-flask-%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81-2/</link>
      <pubDate>Tue, 22 Nov 2016 13:22:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/flask-framework-cookbook-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-flask-%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81-2/</guid>
      <description>通过OpenID，我们可以使用第三方的帐号登录，而不需要再注册帐号 这些只是需要授权必要的用户信息，也可以通过OpenID设置哪些用户信息可以</description>
    </item>
    
    <item>
      <title>《Flask Framework Cookbook》 学习笔记 - Flask 用户认证 - 基本认证方式</title>
      <link>http://www.weihaosi.me/post/flask-framework-cookbook-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-flask-%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Wed, 16 Nov 2016 13:25:28 +0800</pubDate>
      
      <guid>http://www.weihaosi.me/post/flask-framework-cookbook-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-flask-%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/</guid>
      <description>基于session的简单用户认证 当第一时间登录后，用户的信息将会在应用服务端的session中和浏览器的cookie中进行保存 这种情况下，必</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>http://www.weihaosi.me/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.weihaosi.me/about/</guid>
      <description>没有什么好介绍的😊</description>
    </item>
    
    <item>
      <title></title>
      <link>http://www.weihaosi.me/post/newnote_1551539053537/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.weihaosi.me/post/newnote_1551539053537/</guid>
      <description>dddd</description>
    </item>
    
  </channel>
</rss>